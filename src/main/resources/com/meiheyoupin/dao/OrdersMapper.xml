<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meiheyoupin.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.meiheyoupin.entity.Orders">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="payment_amount" jdbcType="DECIMAL" property="paymentAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="delivery_date" jdbcType="TINYINT" property="deliveryDate" />
    <result column="delivery_time" jdbcType="TINYINT" property="deliveryTime" />
    <result column="has_invoice" jdbcType="TINYINT" property="hasInvoice" />
    <result column="invoice_id" jdbcType="INTEGER" property="invoiceId" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount" />
    <result column="red_envelope_amount" jdbcType="DECIMAL" property="redEnvelopeAmount" />
    <result column="pay_way" jdbcType="VARCHAR" property="payWay" />
    <result column="store_reject_reason" jdbcType="TINYINT" property="storeRejectReason" />
    <result column="refund_reason" jdbcType="TINYINT" property="refundReason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, store_id, payment_amount, total_amount, state, name, count, address_id, delivery_date,
    delivery_time, has_invoice, invoice_id, comment, coupon_amount, red_envelope_amount, pay_way, store_reject_reason, refund_reason,
    create_time, update_time
  </sql>

  <select id="selectByState" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    from orders
    WHERE state=#{state}
  </select>

  <select id="selectOrderSize" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM orders WHERE state=#{state}
  </select>

  <select id="selectOrderById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM orders
    WHERE id=#{id}
  </select>

  <update id="updateOrderById" parameterType="com.meiheyoupin.entity.Orders">
    update orders
    <set>
      <if test="couponAmount != null">
        coupon_amount=#{couponAmount},
      </if>
      <if test="addressId != null">
        address_id=#{addressId},
      </if>
      <if test="createTime != null">
        create_time=#{createTime},
      </if>
      <if test="count != null">
        count=#{count},
      </if>
      <if test="hasInvoice != null">
        has_invoice=#{hasInvoice},
      </if>
      <if test="paymentAmount != null">
        payment_amount=#{paymentAmount},
      </if>
      <if test="deliveryTime != null">
        delivery_time=#{deliveryTime},
      </if>
      <if test="deliveryDate != null">
        delivery_date=#{deliveryDate},
      </if>
      <if test="updateTime != null">
        update_time=#{updateTime},
      </if>
      <if test="userId != null">
        user_id=#{userId},
      </if>
      <if test="totalAmount != null">
        total_amount=#{totalAmount},
      </if>
      <if test="name != null">
        name=#{name},
      </if>
      <if test="invoiceId != null">
        invoice_id=#{invoiceId},
      </if>
      <if test="comment != null">
        comment=#{comment},
      </if>
      <if test="state != null">
        state=#{state},
      </if>
      <if test="redEnvelopeAmount != null">
        red_envelope_amount=#{redEnvelopeAmount},
      </if>
      <if test="storeId != null">
        store_id=#{storeId},
      </if>
      <if test="payWay != null">
        pay_way=#{payWay},
      </if>
      <if test="storeRejectReason != null">
        store_reject_reason=#{storeRejectReason},
      </if>
      <if test="refundReason != null">
        refund_reason=#{refundReason},
      </if>
    </set>
    where id=#{id}
  </update>
</mapper>