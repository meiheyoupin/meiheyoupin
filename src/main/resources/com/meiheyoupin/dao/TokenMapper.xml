<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meiheyoupin.dao.TokenMapper">
  <resultMap id="BaseResultMap" type="com.meiheyoupin.entity.Token">
    <id column="tokenid" jdbcType="INTEGER" property="tokenid" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="updatetime" jdbcType="DATE" property="updatetime" />
    <result column="expiretime" jdbcType="DATE" property="expiretime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tokenid, token, userid, updatetime, expiretime
  </sql>
  <select id="selectByExample" parameterType="com.meiheyoupin.entity.TokenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByUserAdminId" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT token FROM token WHERE userid=#{id}
  </select>
  <insert id="insertToken" parameterType="com.meiheyoupin.entity.Token">
    insert into token (tokenid, token, userid,
      updatetime, expiretime)
    values (#{tokenid,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER},
      #{updatetime,jdbcType=DATE}, #{expiretime,jdbcType=DATE})
  </insert>
  <delete id="deleteByExpireTime" parameterType="com.meiheyoupin.entity.Token">
    delete from token
    where tokenid=#{tokenid}
  </delete>
  <update id="updateByToken" parameterType="com.meiheyoupin.entity.Token">
    UPDATE token
    SET token=#{token},updatetime=#{updatetime},expiretime=#{expiretime}
    WHERE userid=#{userid}
  </update>
  <select id="selectByStringToken" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT token from token
    WHERE token=#{token}
  </select>
</mapper>