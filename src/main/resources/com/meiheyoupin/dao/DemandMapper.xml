<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meiheyoupin.dao.DemandMapper">
  <resultMap id="BaseResultMap" type="com.meiheyoupin.entity.Demand">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contacts_tel" jdbcType="VARCHAR" property="contactsTel" />
    <result column="contacts_name" jdbcType="VARCHAR" property="contactsName" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="selected_date" jdbcType="DATE" property="selectedDate" />
    <result column="selected_time" jdbcType="VARCHAR" property="selectedTime" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="budget" jdbcType="DECIMAL" property="budget" />
    <result column="num_of_people" jdbcType="INTEGER" property="numOfPeople" />
    <result column="demand" jdbcType="VARCHAR" property="demand" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contacts_tel, contacts_name, state, selected_date, selected_time, subject_id, 
    budget, num_of_people, demand, user_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.meiheyoupin.entity.DemandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from demand
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from demand
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.meiheyoupin.entity.DemandExample">
    delete from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.meiheyoupin.entity.Demand">
    insert into demand (id, contacts_tel, contacts_name, 
      state, selected_date, selected_time, 
      subject_id, budget, num_of_people, 
      demand, user_id, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{contactsTel,jdbcType=VARCHAR}, #{contactsName,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT}, #{selectedDate,jdbcType=DATE}, #{selectedTime,jdbcType=VARCHAR}, 
      #{subjectId,jdbcType=INTEGER}, #{budget,jdbcType=DECIMAL}, #{numOfPeople,jdbcType=INTEGER}, 
      #{demand,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.meiheyoupin.entity.Demand">
    insert into demand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contactsTel != null">
        contacts_tel,
      </if>
      <if test="contactsName != null">
        contacts_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="selectedDate != null">
        selected_date,
      </if>
      <if test="selectedTime != null">
        selected_time,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="budget != null">
        budget,
      </if>
      <if test="numOfPeople != null">
        num_of_people,
      </if>
      <if test="demand != null">
        demand,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contactsTel != null">
        #{contactsTel,jdbcType=VARCHAR},
      </if>
      <if test="contactsName != null">
        #{contactsName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="selectedDate != null">
        #{selectedDate,jdbcType=DATE},
      </if>
      <if test="selectedTime != null">
        #{selectedTime,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="budget != null">
        #{budget,jdbcType=DECIMAL},
      </if>
      <if test="numOfPeople != null">
        #{numOfPeople,jdbcType=INTEGER},
      </if>
      <if test="demand != null">
        #{demand,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.meiheyoupin.entity.DemandExample" resultType="java.lang.Long">
    select count(*) from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demand
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contactsTel != null">
        contacts_tel = #{record.contactsTel,jdbcType=VARCHAR},
      </if>
      <if test="record.contactsName != null">
        contacts_name = #{record.contactsName,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.selectedDate != null">
        selected_date = #{record.selectedDate,jdbcType=DATE},
      </if>
      <if test="record.selectedTime != null">
        selected_time = #{record.selectedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.budget != null">
        budget = #{record.budget,jdbcType=DECIMAL},
      </if>
      <if test="record.numOfPeople != null">
        num_of_people = #{record.numOfPeople,jdbcType=INTEGER},
      </if>
      <if test="record.demand != null">
        demand = #{record.demand,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demand
    set id = #{record.id,jdbcType=INTEGER},
      contacts_tel = #{record.contactsTel,jdbcType=VARCHAR},
      contacts_name = #{record.contactsName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=TINYINT},
      selected_date = #{record.selectedDate,jdbcType=DATE},
      selected_time = #{record.selectedTime,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      budget = #{record.budget,jdbcType=DECIMAL},
      num_of_people = #{record.numOfPeople,jdbcType=INTEGER},
      demand = #{record.demand,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.meiheyoupin.entity.Demand">
    update demand
    <set>
      <if test="contactsTel != null">
        contacts_tel = #{contactsTel,jdbcType=VARCHAR},
      </if>
      <if test="contactsName != null">
        contacts_name = #{contactsName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="selectedDate != null">
        selected_date = #{selectedDate,jdbcType=DATE},
      </if>
      <if test="selectedTime != null">
        selected_time = #{selectedTime,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="budget != null">
        budget = #{budget,jdbcType=DECIMAL},
      </if>
      <if test="numOfPeople != null">
        num_of_people = #{numOfPeople,jdbcType=INTEGER},
      </if>
      <if test="demand != null">
        demand = #{demand,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meiheyoupin.entity.Demand">
    update demand
    set contacts_tel = #{contactsTel,jdbcType=VARCHAR},
      contacts_name = #{contactsName,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      selected_date = #{selectedDate,jdbcType=DATE},
      selected_time = #{selectedTime,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER},
      budget = #{budget,jdbcType=DECIMAL},
      num_of_people = #{numOfPeople,jdbcType=INTEGER},
      demand = #{demand,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>